The following options are target specific:
  -maout-chmem=               Deprecated.  Set the size of non-static data for ELKS executables.  Uses of this option are diagnosed.
  -maout-heap=                Set the size of the heap for ELKS OS executables.
  -maout-stack=               Set the size of the initial stack for ELKS OS executables.
  -maout-symtab               Add symbol table to output file.
  -maout-total=               Deprecated.  Set the top of the data segment for ELKS executables.  Uses of this option are diagnosed.
  -march=any                  Produce code that works on any CPU, with generic tuning options (default).
  -march=any_186              Use features available on both Intel 80186 and NEC V20 or better.
  -march=i186                 Use features of and optimize code for the Intel 80186.  Same as -march=i80186.
  -march=i188                 Use features of and optimize code for the Intel 80188.  Same as -march=i80188.
  -march=i286                 Use features of and optimize code for the Intel 80286.  Same as -march=i80286.
  -march=i80186               Use features of and optimize code for the Intel 80186.
  -march=i80188               Use features of and optimize code for the Intel 80188.
  -march=i80286               Use features of and optimize code for the Intel 80286.
  -march=i8086                Use features of and optimize code for the Intel 8086.
  -march=i8088                Use features of and optimize code for the Intel 8088.
  -march=v20                  Use features of and optimize code for the NEC V20.
  -march=v30                  Use features of and optimize code for the NEC V30.
  -march=v30mz                Use features of and optimize code for the NEC V30MZ.
  -masm=att                   Use AT&T assembler dialect (default).
  -masm=intel                 Use Intel assembler dialect (experimental).
  -mcmodel=medium             Generate code for the medium code model, with one data segment and multiple text segments.
  -mcmodel=small              Generate code for the small code model, with one data and one text segment.
  -mcmodel=tiny               Generate code for the tiny code model (default), with one combined data and text segment.
  -mdosx                      Generate MS-DOS executables which run under a DOS extender (experimental).
  -mdosx32                    Generate MS-DOS executables which run under a DOS extender; prefer 32-bit DPMI mode (experimental).
  -mdpmi                      Generate MS-DOS executables which run under a DOS extender (experimental).  Same as -mdosx.
  -melks                      Generate executables for ELKS OS, and link with elks-libc.  Same as -mr=.
  -mfar-function-if-far-return-type Ignored.
  -mhandle-non-i186           Generate executables which check if they are running on an 80186-capable CPU.
  -mhandle-non-i286           Generate executables which check if they are running on an 80286-capable CPU.
  -mmsdos                     Generate executables for MS-DOS (default).  Same as -mr=.
  -mmsdos-handle-v1           Generate MS-DOS executables which fail gracefully on DOS v1.x.
  -mnewlib-autofloat-stdio    Automatically decide between floating-point and non-fp formatted I/O routines (default).
  -mnewlib-nano-stdio         Link with Newlib's limited formatted I/O routines (experimental).
  -mno-callee-assume-ds-data-segment Alternate calling convention (callee cannot assume %ds points to program's data segment on entry).
  -mno-callee-assume-ss-data-segment Alternate (experimental) calling convention (callee cannot assume %ss points to program's data segment on entry).
  -mno-newlib-autofloat-stdio Do not automatically decide between floating-point and non-fp formatted I/O routines.
  -mno-segment-relocation-stuff Disable language features which use segment relocations.
  -mprotected-mode            Try to produce code suitable for running in protected mode.
  -mr=                        Generate executables for the given runtime environment.
  -mregparmcall               Alternate calling convention (some arguments in registers; callee pops rest).
  -mrtd                       Alternate calling convention (callee pops arguments).
  -msegelf                    Use H. Peter Anvin's proposed 16-bit segmented code ABI (experimental).
  -msegment-relocation-stuff  Enable language features which use segment relocations.
  -mshort-jumps               Do (not - this is the default) use jump instructions which can only jump -128/+127 bytes.
  -mstack-size=               Set the size of the initial stack for ELKS OS executables.  Same as -maout-stack=.
  -mtsr                       Add code to support terminate-and-stay-resident (TSR) programs (experimental).
  -mtune=any                  Optimize code for a generic IA-16 CPU.
  -mtune=any_186              Optimize code for a generic IA-16 CPU with Intel 80186 features.
  -mtune=i186                 Optimize code for the Intel 80186.  Same as -mtune=i80186.
  -mtune=i188                 Optimize code for the Intel 80188.  Same as -mtune=i80188.
  -mtune=i286                 Optimize code for the Intel 80286.  Same as -mtune=i80286.
  -mtune=i80186               Optimize code for the Intel 80186.
  -mtune=i80188               Optimize code for the Intel 80188.
  -mtune=i80286               Optimize code for the Intel 80286.
  -mtune=i8086                Optimize code for the Intel 8086.
  -mtune=i8088                Optimize code for the Intel 8088.
  -mtune=v20                  Optimize code for the NEC V20.
  -mtune=v30                  Optimize code for the NEC V30.
  -mtune=v30mz                Optimize code for the NEC V30MZ.

Assembler options
=================

Use "-Wa,OPTION" to pass "OPTION" to the assembler.

  -Qy, -Qn                ignored
  -V                      print assembler version number
  -k                      ignored
  -n                      Do not optimize code alignment
  -q                      quieten some warnings
  -s                      ignored
  --32/--64/--x32         generate 32bit/64bit/x32 object
  --32-segelf             generate 32bit code, use IA-16 segmentation ABI
  --divide                do not treat `/' as a comment character
  -march=CPU[,+EXTENSION...]
                          generate code for CPU and EXTENSION, CPU is one of:
                           default, push, pop, generic32, generic64, i386, i486,
                           i586, i686, pentium, pentiumpro, pentiumii,
                           pentiumiii, pentium4, prescott, nocona, core, core2,
                           corei7, iamcu, k6, k6_2, athlon, opteron, k8,
                           amdfam10, bdver1, bdver2, bdver3, bdver4, znver1,
                           znver2, znver3, btver1, btver2
                          EXTENSION is combination of (possibly "no"-prefixed):
                           8087, 287, 387, 687, cmov, fxsr, mmx, sse, sse2,
                           sse3, sse4a, ssse3, sse4.1, sse4.2, sse4, avx, avx2,
                           avx512f, avx512cd, avx512er, avx512pf, avx512dq,
                           avx512bw, avx512vl, vmx, vmfunc, smx, xsave,
                           xsaveopt, xsavec, xsaves, aes, pclmul, fsgsbase,
                           rdrnd, f16c, bmi2, fma, fma4, xop, lwp, movbe, cx16,
                           ept, lzcnt, popcnt, hle, rtm, invpcid, clflush, nop,
                           syscall, rdtscp, 3dnow, 3dnowa, padlock, svme, sse4a,
                           abm, bmi, tbm, adx, rdseed, prfchw, smap, mpx, sha,
                           clflushopt, prefetchwt1, se1, clwb, avx512ifma,
                           avx512vbmi, avx512_4fmaps, avx512_4vnniw,
                           avx512_vpopcntdq, avx512_vbmi2, avx512_vnni,
                           avx512_bitalg, avx_vnni, clzero, mwaitx, ospke,
                           rdpid, ptwrite, ibt, shstk, gfni, vaes, vpclmulqdq,
                           wbnoinvd, pconfig, waitpkg, cldemote, amx_int8,
                           amx_bf16, amx_tile, movdiri, movdir64b, avx512_bf16,
                           avx512_vp2intersect, tdx, enqcmd, serialize, rdpru,
                           mcommit, sev_es, tsxldtrk, kl, widekl, uintr, hreset,
                           avx512_fp16, no87
  -mtune=CPU              optimize for CPU, CPU is one of:
                           generic32, generic64, i8086, i186, i286, i386, i486,
                           i586, i686, pentium, pentiumpro, pentiumii,
                           pentiumiii, pentium4, prescott, nocona, core, core2,
                           corei7, iamcu, k6, k6_2, athlon, opteron, k8,
                           amdfam10, bdver1, bdver2, bdver3, bdver4, znver1,
                           znver2, znver3, btver1, btver2
  -msse2avx               encode SSE instructions with VEX prefix
  -muse-unaligned-vector-move
                          encode aligned vector move as unaligned vector move
  -msse-check=[none|error|warning] (default: warning)
                          check SSE instructions
  -moperand-check=[none|error|warning] (default: warning)
                          check operand combinations for validity
  -mavxscalar=[128|256] (default: 128)
                          encode scalar AVX instructions with specific vector
                           length
  -mvexwig=[0|1] (default: 0)
                          encode VEX instructions with specific VEX.W value
                           for VEX.W bit ignored instructions
  -mevexlig=[128|256|512] (default: 128)
                          encode scalar EVEX instructions with specific vector
                           length
  -mevexwig=[0|1] (default: 0)
                          encode EVEX instructions with specific EVEX.W value
                           for EVEX.W bit ignored instructions
  -mevexrcig=[rne|rd|ru|rz] (default: rne)
                          encode EVEX instructions with specific EVEX.RC value
                           for SAE-only ignored instructions
  -mmnemonic=[att|intel] (default: att)
                          use AT&T/Intel mnemonic
  -msyntax=[att|intel] (default: att)
                          use AT&T/Intel syntax
  -mindex-reg             support pseudo index registers
  -mnaked-reg             don't require `%' prefix for registers
  -madd-bnd-prefix        add BND prefix for all valid branches
  -mshared                disable branch optimization for shared code
  -mx86-used-note=[no|yes] (default: no)
                          generate x86 used ISA and feature properties
  -momit-lock-prefix=[no|yes] (default: no)
                          strip all lock prefixes
  -mfence-as-lock-add=[no|yes] (default: no)
                          encode lfence, mfence and sfence as
                           lock addl $0x0, (%{re}sp)
  -mrelax-relocations=[no|yes] (default: yes)
                          generate relax relocations
  -malign-branch-boundary=NUM (default: 0)
                          align branches within NUM byte boundary
  -malign-branch=TYPE[+TYPE...] (default: jcc+fused+jmp)
                          TYPE is combination of jcc, fused, jmp, call, ret,
                           indirect
                          specify types of branches to align
  -malign-branch-prefix-size=NUM (default: 5)
                          align branches with NUM prefixes per instruction
  -mbranches-within-32B-boundaries
                          align branches within 32 byte boundary
  -mlfence-after-load=[no|yes] (default: no)
                          generate lfence after load
  -mlfence-before-indirect-branch=[none|all|register|memory] (default: none)
                          generate lfence before indirect near branch
  -mlfence-before-ret=[none|or|not|shl|yes] (default: none)
                          generate lfence before ret
  -mamd64                 accept only AMD64 ISA [default]
  -mintel64               accept only Intel64 ISA

Linker options
==============

Use "-Wl,OPTION" to pass "OPTION" to the linker.

